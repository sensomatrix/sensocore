{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"jsonExample/","text":"{ \"JSONFILE_Raw_Template\": { \"header\": { \"group1\": [ { \"type\": \"raw\", \"index\": 3 }, { \"type\": \"processed\", \"index\": 8 }, { \"type\": \"raw\", \"index\": 11 } ], \"accelorometers\": [ { \"type\": \"raw\", \"index\": 5 }, { \"type\": \"raw\", \"index\": 6 }, { \"type\": \"raw\", \"index\": 7 } ], \"patient_information\": { \"id\": \"\", \"age\": \"_NaN_\", \"weight\": \"_NaN_\", \"height\": \"_NaN_\", \"address\": \"\", \"birthdate\": \"\", \"full_name\": \"\", \"sex\": \"\" }, \"recording_info\": { \"instituition\": \"\", \"address\": \"\", \"admin_name\": \"\", \"admin_id\": \"\", \"date\": \"\", \"time_description\": \"Eastern Time (US & Canada)\", \"visit_num\": \"_NaN_\", \"saved_location_on_disk_or_network\": \"\" }, \"device_information\": { \"name\": \"\", \"type\": \"\", \"company\": \"\", \"SIN\": \"\", \"channel_num\": 6, \"channel1\": { \"name\": \"IBI\", \"sensor\": \"PPG\", \"sensor_location_on_body\": \"\", \"data\": { \"dimension\": 2, \"description\": [ \"Time of the beat with respect to the start time\", \"Duration\" ], \"start_time\": [ \"11:38:00\", \"11:38:00.02\" ], \"end_time\": [ \"12:55:00.04\", \"12:55:00\" ], \"duration\": [ \"01:17:00\", \"01:17:00.14\" ], \"fs\": \"_NaN_\", \"unit\": [ \"Seconds\", \"Seconds\" ] } }, \"channel2\": { \"name\": \"BVP\", \"sensor\": \"PPG\", \"sensor_location_on_body\": \"Wrist\", \"data\": { \"dimension\": 1, \"description\": \"Blood Volume Pressure\", \"start_time\": \"11:38:00\", \"end_time\": \"12:55:00\", \"duration\": \"01:17:00\", \"fs\": 64, \"unit\": \"Fraction of nanoWatt (nW)\" } }, \"channel3\": { \"name\": \"HR\", \"sensor\": \"PPG\", \"sensor_location_on_body\": \"Wrist\", \"data\": { \"dimension\": 1, \"description\": \"Heart Rate\", \"start_time\": \"11:38:00\", \"end_time\": \"12:55:00\", \"duration\": \"01:17:00\", \"fs\": 1, \"unit\": \"BPM\" } }, \"channel4\": { \"name\": \"TEMP\", \"sensor\": \"Thermopile\", \"sensor_location_on_body\": \"Wrist\", \"data\": { \"dimension\": 1, \"description\": \"Temperature\", \"start_time\": \"11:38:00\", \"end_time\": \"12:55:00\", \"duration\": \"01:17:00\", \"fs\": 4, \"unit\": \"Celsius\" } }, \"channel5\": { \"name\": \"ACC\", \"sensor\": \"Accelerometer\", \"sensor_location_on_body\": \"Wrist\", \"data\": { \"dimension\": 3, \"description\": [ \"gravitational force applied to spacial dimensions x\", \"gravitational force (g) applied to spacial dimensions y\", \"gravitational force (g) applied to spacial dimensions z\" ], \"start_time\": [ \"11:38:00\", \"11:38:00.07\", \"11:38:00.80\" ], \"end_time\": [ \"12:55:00.19\", \"12:55:00\", \"12:55:00\" ], \"duration\": [ \"01:17:00.45\", \"01:17:00.98\", \"01:17:00.67\" ], \"fs\": [32,32,32], \"unit\": [ \"Gravitational Force (g)\", \"Gravitational Force (g)\", \"Gravitational Force (g)\" ] } }, \"channel6\": { \"name\": \"EDA\", \"sensor\": \"EDA\", \"sensor_location_on_body\": \"Wrist\", \"data\": { \"dimension\": 1, \"description\": \"Electrodermal Activity\", \"start_time\": \"11:38:00\", \"end_time\": \"12:55:00\", \"duration\": \"01:17:00\", \"fs\": 4, \"unit\": \"Microsiemens (?S)\" } } }, \"epoch_information\": { \"channel1\": { \"epoch_num\": 3, \"epoch1\": { \"name\": \"Video\", \"start_time\": \"11:43:00\", \"end_time\": \"11:51:00\", \"duration\": \"00:08:00\" }, \"epoch2\": { \"name\": \"Demo\", \"start_time\": \"11:58:00\", \"end_time\": \"12:10:00\", \"duration\": \"00:12:00\" }, \"epoch3\": { \"name\": \"Recall\", \"start_time\": \"12:44:00\", \"end_time\": \"12:47:00\", \"duration\": \"00:03:00\" } }, \"channel2\": { \"epoch_num\": 3, \"epoch1\": { \"name\": \"Video\", \"start_time\": \"11:43:00\", \"end_time\": \"11:51:00\", \"duration\": \"00:08:00\" }, \"epoch2\": { \"name\": \"Demo\", \"start_time\": \"11:58:00\", \"end_time\": \"12:10:00\", \"duration\": \"00:12:00\" }, \"epoch3\": { \"name\": \"Recall\", \"start_time\": \"12:44:00\", \"end_time\": \"12:47:00\", \"duration\": \"00:03:00\" } }, \"channel3\": { \"epoch_num\": 3, \"epoch1\": { \"name\": \"Video\", \"start_time\": \"11:43:00\", \"end_time\": \"11:51:00\", \"duration\": \"00:08:00\" }, \"epoch2\": { \"name\": \"Demo\", \"start_time\": \"11:58:00\", \"end_time\": \"12:10:00\", \"duration\": \"00:12:00\" }, \"epoch3\": { \"name\": \"Recall\", \"start_time\": \"12:44:00\", \"end_time\": \"12:47:00\", \"duration\": \"00:03:00\" } }, \"channel4\": { \"epoch_num\": 3, \"epoch1\": { \"name\": \"Video\", \"start_time\": \"11:43:00\", \"end_time\": \"11:51:00\", \"duration\": \"00:08:00\" }, \"epoch2\": { \"name\": \"Demo\", \"start_time\": \"11:58:00\", \"end_time\": \"12:10:00\", \"duration\": \"00:12:00\" }, \"epoch3\": { \"name\": \"Recall\", \"start_time\": \"12:44:00\", \"end_time\": \"12:47:00\", \"duration\": \"00:03:00\" } }, \"channel5\": { \"epoch_num\": 3, \"epoch1\": { \"name\": \"Video\", \"start_time\": \"11:43:00\", \"end_time\": \"11:51:00\", \"duration\": \"00:08:00\" }, \"epoch2\": { \"name\": \"Demo\", \"start_time\": \"11:58:00\", \"end_time\": \"12:10:00\", \"duration\": \"00:12:00\" }, \"epoch3\": { \"name\": \"Recall\", \"start_time\": \"12:44:00\", \"end_time\": \"12:47:00\", \"duration\": \"00:03:00\" } }, \"channel6\": { \"epoch_num\": 3, \"epoch1\": { \"name\": \"Video\", \"start_time\": \"11:43:00\", \"end_time\": \"11:51:00\", \"duration\": \"00:08:00\" }, \"epoch2\": { \"name\": \"Demo\", \"start_time\": \"11:58:00\", \"end_time\": \"12:10:00\", \"duration\": \"00:12:00\" }, \"epoch3\": { \"name\": \"Recall\", \"start_time\": \"12:44:00\", \"end_time\": \"12:47:00\", \"duration\": \"00:03:00\" } } }, \"processing_information\": { \"channel1\": { \"epoch1\": { }, \"epoch2\": { }, \"epoch3\": { } }, \"channel2\": { \"epoch1\": { }, \"epoch2\": { }, \"epoch3\": { } }, \"channel3\": { \"epoch1\": { }, \"epoch2\": { }, \"epoch3\": { } }, \"channel4\": { \"epoch1\": { }, \"epoch2\": { }, \"epoch3\": { } }, \"channel5\": { \"epoch1\": { }, \"epoch2\": { }, \"epoch3\": { } }, \"channel6\": { \"epoch1\": { }, \"epoch2\": { }, \"epoch3\": { } } } }, \"Raw_Signal\": { \"channel1\": { \"data\": null }, \"channel2\": { \"data\": null }, \"channel3\": { \"data\": null }, \"channel4\": { \"data\": null }, \"channel5\": { \"data\": null }, \"channel6\": { \"data\": null } }, \"Processed_Signal\": { \"channel1\": { \"epoch1\": { }, \"epoch2\": { }, \"epoch3\": { } }, \"channel2\": { \"epoch1\": { }, \"epoch2\": { }, \"epoch3\": { } }, \"channel3\": { \"epoch1\": { }, \"epoch2\": { }, \"epoch3\": { } }, \"channel4\": { \"epoch1\": { }, \"epoch2\": { }, \"epoch3\": { } }, \"channel5\": { \"epoch1\": { }, \"epoch2\": { }, \"epoch3\": { } }, \"channel6\": { \"epoch1\": { }, \"epoch2\": { }, \"epoch3\": { } } } } }","title":"jsonExample"},{"location":"loadFile/","text":"How To Load Data How to load data from hard disk Note: Currently you can load the following file types assuming that each follow their respective formats: .txt .json ( JSON Template ) .edf (from Physionet ) .fif (from Physionet ) The .txt file should follow the following format: %name of signal% %type of signal% %sampling rate of signal% %list of time separated by commas% %list of samples separated by commas% For Example: EEG Jansen eeg 200 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 4, 6, 2, 9, 11, 1, 0, 4, 3, 12, 5 Step 1 From the main screen, click on Load data at the top left corner and click on Locally . Step 2 This will open the dialog to browse for the file on your computer. Browse through your computer, select your input file, and click Open . Step 3 Once the file is loaded onto the application, you should be able to see the signal on the Oscilloscope, similar to the figure below. If the file is a JSON file, then you would also see a few key patient information on the left hand side. How to load data from Physionet Physionet is an online database with several recorded biosignals available to the public. Note : Internet connection is required. Step 1 From the main screen, click on Load data at the top left corner and click on PhysioNet . Step 2 This will open the dialog similar to the figure below. You can click on DB URL here or on the dialog to go to Physionet. Navigate the site, and once you find a dataset of interest, for example like that in the figure below. Copy & paste the URL and dataset name into the dialog. Also, choose from what sample to what sample you want to see. Choose the type of the signal and check the box if you would like to see the annotations. Then click on Import dataset . Once the dataset has been loaded, it will be displayed on the Oscilloscope. How to simulate your own data EEG Simulation Step 1 Click on EEG Simulation at the top left hand side. Step 2 In the EEG Simulation dialog, you can set the various signal parameters, such as C1 (Jansen Model), signal name, noise, sampling frequency (Note: Max 1KHz), and duration (Note: Min: 1 sec). You can click on Preview Signal in order to see what the signal you have created looks like. Once you are satisfied with your signal, click on Create Signal to output the signal on the Oscilloscope. ECG Simulation Step 1 Click on ECG Simulation at the top left hand side. Step 2 In the ECG Simulation dialog, you can set various ECG parameters, such as the P Wave, Q Wave, R Wave, S Wave, and T Wave parameters. You can also set the signal name, noise, sampling frequency, duration, period, and delay. Once you are satisfied with your signal, click on Create Signal to output the signal on the Oscilloscope.","title":"File Import"},{"location":"loadFile/#how-to-load-data","text":"","title":"How To Load Data"},{"location":"loadFile/#how-to-load-data-from-hard-disk","text":"Note: Currently you can load the following file types assuming that each follow their respective formats: .txt .json ( JSON Template ) .edf (from Physionet ) .fif (from Physionet ) The .txt file should follow the following format: %name of signal% %type of signal% %sampling rate of signal% %list of time separated by commas% %list of samples separated by commas% For Example: EEG Jansen eeg 200 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 4, 6, 2, 9, 11, 1, 0, 4, 3, 12, 5","title":"How to load data from hard disk"},{"location":"loadFile/#step-1","text":"From the main screen, click on Load data at the top left corner and click on Locally .","title":"Step 1"},{"location":"loadFile/#step-2","text":"This will open the dialog to browse for the file on your computer. Browse through your computer, select your input file, and click Open .","title":"Step 2"},{"location":"loadFile/#step-3","text":"Once the file is loaded onto the application, you should be able to see the signal on the Oscilloscope, similar to the figure below. If the file is a JSON file, then you would also see a few key patient information on the left hand side.","title":"Step 3"},{"location":"loadFile/#how-to-load-data-from-physionet","text":"Physionet is an online database with several recorded biosignals available to the public. Note : Internet connection is required.","title":"How to load data from Physionet"},{"location":"loadFile/#step-1_1","text":"From the main screen, click on Load data at the top left corner and click on PhysioNet .","title":"Step 1"},{"location":"loadFile/#step-2_1","text":"This will open the dialog similar to the figure below. You can click on DB URL here or on the dialog to go to Physionet. Navigate the site, and once you find a dataset of interest, for example like that in the figure below. Copy & paste the URL and dataset name into the dialog. Also, choose from what sample to what sample you want to see. Choose the type of the signal and check the box if you would like to see the annotations. Then click on Import dataset . Once the dataset has been loaded, it will be displayed on the Oscilloscope.","title":"Step 2"},{"location":"loadFile/#how-to-simulate-your-own-data","text":"","title":"How to simulate your own data"},{"location":"loadFile/#eeg-simulation","text":"","title":"EEG Simulation"},{"location":"loadFile/#step-1_2","text":"Click on EEG Simulation at the top left hand side.","title":"Step 1"},{"location":"loadFile/#step-2_2","text":"In the EEG Simulation dialog, you can set the various signal parameters, such as C1 (Jansen Model), signal name, noise, sampling frequency (Note: Max 1KHz), and duration (Note: Min: 1 sec). You can click on Preview Signal in order to see what the signal you have created looks like. Once you are satisfied with your signal, click on Create Signal to output the signal on the Oscilloscope.","title":"Step 2"},{"location":"loadFile/#ecg-simulation","text":"","title":"ECG Simulation"},{"location":"loadFile/#step-1_3","text":"Click on ECG Simulation at the top left hand side.","title":"Step 1"},{"location":"loadFile/#step-2_3","text":"In the ECG Simulation dialog, you can set various ECG parameters, such as the P Wave, Q Wave, R Wave, S Wave, and T Wave parameters. You can also set the signal name, noise, sampling frequency, duration, period, and delay. Once you are satisfied with your signal, click on Create Signal to output the signal on the Oscilloscope.","title":"Step 2"},{"location":"simulatedata/","text":"Simulate the ECG and EEG data Simulating ECG data The user is required to select the ECG Simulation, which is situated at the top right of the SensoMatrix window. Screenshot provided below: Once the ECG Simulation window is opened, the user will be able to configure the simulated signal. This will be done by changing the parameters of the P,Q,R,S and T wave, which are the main components of the ECG signal. In terms of these P,Q,R,S and T waves, there are corresponding magnitude, width and time. Screenshot provided below: The user can also configure the signal properties, in a sense that it simulates a signal with added noise, or changing other parameters such as sampling frequency, period, total duration of the signal and to create a delay into the signal. The user can also change the signal name, in case they plan to work with multiple signals. Screenshot provided below: Example of a simulated ECG signal with total duration: 120 secs, delay: 2 secs, and noise: 0.0045. The user can gain a complete understanding regarding how to simulate ECG signal by referring to the link below: https://www.academia.edu/1196836/SIMPLIFIED_MATHEMATICAL_MODEL_for_GENERATING_ECG_SIGNAL_and_FITTING_THE_MODEL_USING_NONLINEAR_LEAST_SQUARE_TECHNIQUE?auto=download Simulating EEG data The user is required to select the EEG Simulation, which is situated at the top right of the SensoMatrix window. Screenshot provided below: Once the EEG Simulation window is opened, the user will be able to configure the simulated signal. This will be done by changing the C1 constant, which will dictate the brain wave that the signal will be presented as (e.g: alpha wave, beta wave and etc). This C1 constant is derived from the Jansen Model. The user can also configure the signal properties, in a sense that it simulates a signal with added noise, or changing other parameters such as sampling frequency, period, total duration of the signal and to create a delay into the signal. The user can also change the signal name, in case they plan to work with multiple signals. Example of a simulated EEG signal with total duration: 120 secs and noise: 1.00, with C1 constant: 135. The user can gain a complete understanding regarding how to simulate EEG signal by referring to the link below: http://www.elektrorevue.cz/en/download/modeling-of-the-eeg-signal/","title":"Simulation"},{"location":"simulatedata/#simulate-the-ecg-and-eeg-data","text":"","title":"Simulate the ECG and EEG data"},{"location":"simulatedata/#simulating-ecg-data","text":"The user is required to select the ECG Simulation, which is situated at the top right of the SensoMatrix window. Screenshot provided below: Once the ECG Simulation window is opened, the user will be able to configure the simulated signal. This will be done by changing the parameters of the P,Q,R,S and T wave, which are the main components of the ECG signal. In terms of these P,Q,R,S and T waves, there are corresponding magnitude, width and time. Screenshot provided below: The user can also configure the signal properties, in a sense that it simulates a signal with added noise, or changing other parameters such as sampling frequency, period, total duration of the signal and to create a delay into the signal. The user can also change the signal name, in case they plan to work with multiple signals. Screenshot provided below: Example of a simulated ECG signal with total duration: 120 secs, delay: 2 secs, and noise: 0.0045. The user can gain a complete understanding regarding how to simulate ECG signal by referring to the link below: https://www.academia.edu/1196836/SIMPLIFIED_MATHEMATICAL_MODEL_for_GENERATING_ECG_SIGNAL_and_FITTING_THE_MODEL_USING_NONLINEAR_LEAST_SQUARE_TECHNIQUE?auto=download","title":"Simulating ECG data"},{"location":"simulatedata/#simulating-eeg-data","text":"The user is required to select the EEG Simulation, which is situated at the top right of the SensoMatrix window. Screenshot provided below: Once the EEG Simulation window is opened, the user will be able to configure the simulated signal. This will be done by changing the C1 constant, which will dictate the brain wave that the signal will be presented as (e.g: alpha wave, beta wave and etc). This C1 constant is derived from the Jansen Model. The user can also configure the signal properties, in a sense that it simulates a signal with added noise, or changing other parameters such as sampling frequency, period, total duration of the signal and to create a delay into the signal. The user can also change the signal name, in case they plan to work with multiple signals. Example of a simulated EEG signal with total duration: 120 secs and noise: 1.00, with C1 constant: 135. The user can gain a complete understanding regarding how to simulate EEG signal by referring to the link below: http://www.elektrorevue.cz/en/download/modeling-of-the-eeg-signal/","title":"Simulating EEG data"},{"location":"tagging/","text":"Tagging a window In this scenario, the user is able to select a specific time frame (window) from the ECG/EEG signal, in order to perform further analysis. From the generated/received signal, the user must double click on a desired portion of the signal, for which he/she can properly analyze that portion of the signal. Once the desired portion has been double-clicked for further study, the user will see a blue highlight, to demonstrate the tagged window. Screenshot provided below: The user may also expand or compress the tagged window size, by simply clicking and holding the edge of the window and dragging it along the time axis. Screenshot provided below: The user may also move the tagged window along the time axis, in order to properly analyze the signal in different periods. This can be done by clicking on the tagged window and moving along the time axis. The user may also have a spectrum view of the tagged window, by looking at the spectrum view, which is located at the bottom of the SensoMatrix window. Screenshot provided below: The user can also further analyze the highlighted window, by saving it as an epoch, by clicking on \"Save as Epoch\" located right below the oscilloscope window. As a result, the user will see highlighted portion of the signal being displayed underneath the original signal. Screenshots provided below:","title":"Tagging"},{"location":"tagging/#tagging-a-window","text":"In this scenario, the user is able to select a specific time frame (window) from the ECG/EEG signal, in order to perform further analysis. From the generated/received signal, the user must double click on a desired portion of the signal, for which he/she can properly analyze that portion of the signal. Once the desired portion has been double-clicked for further study, the user will see a blue highlight, to demonstrate the tagged window. Screenshot provided below: The user may also expand or compress the tagged window size, by simply clicking and holding the edge of the window and dragging it along the time axis. Screenshot provided below: The user may also move the tagged window along the time axis, in order to properly analyze the signal in different periods. This can be done by clicking on the tagged window and moving along the time axis. The user may also have a spectrum view of the tagged window, by looking at the spectrum view, which is located at the bottom of the SensoMatrix window. Screenshot provided below: The user can also further analyze the highlighted window, by saving it as an epoch, by clicking on \"Save as Epoch\" located right below the oscilloscope window. As a result, the user will see highlighted portion of the signal being displayed underneath the original signal. Screenshots provided below:","title":"Tagging a window"},{"location":"testing/","text":"Accessing SensoMatrix on Mac Prerequisites You have to ensure that your system has git. Open Terminal in Mac and copy paste this into the Terminal /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install) and press Enter. Afterwards, you are required to run brew install git Run the following commands, in order to configure it to your Git username and email git config --global user.name \"Your Name\" git config --global user.email \"youremail@example.com\" Using Terminal to access SensoMatrix on Mac Go to SensoMatrix application on GitHub. Once you followed the link above, you are required to click on the \"clone or download\" button which can be found in the top right. Screenshot provided below: Once clicked, you will have to clone the HTTPS by copying the HTTPS link provided. Screenshot provided below: You will have to type in cd and click enter. Then type git clone followed by the URL that has been copied. Finally, you can type in ls to see if the SensoMatrix is in the computer. Using PyCharm to access SensoMatrix on Mac Go to SensoMatrix application on GitHub. Once you followed the link above, you are required to click on the \"clone or download\" button which can be found in the top right. Screenshot provided below: Once clicked, you will have to clone the HTTPS by copying the HTTPS link provided. Screenshot provided below: Now you will have to open PyCharm . In PyCharm, you will have to go New Project. Once you have opened a new project, you will have to go to \"VCS\" then go to \"Checkout from Version Control\" and then click on \"Git\". Screenshot provided below: Once the above directions have been followed, there will be a new window that appears that is titled \"Clone Repository\", where you may paste the copied URL from GitHub. Screenshot provided below: Afterwards, you can click on \"Clone\" to access the SensoMatrix's code.","title":"Testing"},{"location":"testing/#accessing-sensomatrix-on-mac","text":"","title":"Accessing SensoMatrix on Mac"},{"location":"testing/#prerequisites","text":"You have to ensure that your system has git. Open Terminal in Mac and copy paste this into the Terminal /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install) and press Enter. Afterwards, you are required to run brew install git Run the following commands, in order to configure it to your Git username and email git config --global user.name \"Your Name\" git config --global user.email \"youremail@example.com\"","title":"Prerequisites"},{"location":"testing/#using-terminal-to-access-sensomatrix-on-mac","text":"Go to SensoMatrix application on GitHub. Once you followed the link above, you are required to click on the \"clone or download\" button which can be found in the top right. Screenshot provided below: Once clicked, you will have to clone the HTTPS by copying the HTTPS link provided. Screenshot provided below: You will have to type in cd and click enter. Then type git clone followed by the URL that has been copied. Finally, you can type in ls to see if the SensoMatrix is in the computer.","title":"Using Terminal to access SensoMatrix on Mac"},{"location":"testing/#using-pycharm-to-access-sensomatrix-on-mac","text":"Go to SensoMatrix application on GitHub. Once you followed the link above, you are required to click on the \"clone or download\" button which can be found in the top right. Screenshot provided below: Once clicked, you will have to clone the HTTPS by copying the HTTPS link provided. Screenshot provided below: Now you will have to open PyCharm . In PyCharm, you will have to go New Project. Once you have opened a new project, you will have to go to \"VCS\" then go to \"Checkout from Version Control\" and then click on \"Git\". Screenshot provided below: Once the above directions have been followed, there will be a new window that appears that is titled \"Clone Repository\", where you may paste the copied URL from GitHub. Screenshot provided below: Afterwards, you can click on \"Clone\" to access the SensoMatrix's code.","title":"Using PyCharm to access SensoMatrix on Mac"},{"location":"visualization/","text":"Visualizing the data The application can be used to work with a single channel signal or a multichannel signal. Single channel When working with only one signal. Removing DC Component To remove the DC component from the signal, under the Channels tab, right-click on the signal name for which you want to remove DC, and click on Remove DC . Viewing the Power Spectral Density Under the Channels tab, right-click on the signal name for which you want to see the power spectral density (PSD). Click on Plot PSD and the PSD of the signal will appear under the Secondary plotting tab. Viewing the Time-Frequency Plot Under the Channels tab, right-click on the signal name for which you want to see the time-frequency plot. Click on Plot Time-Frequency and the time-frequency plot will appear under the Secondary plotting tab. Moving & Zooming To move the signal, click and drag the signal. To zoom in & out of the signal, scroll up & down on the signal. Using the slider The slider at the bottom of the Oscilloscope can be used to take a closer look at the signal. In order to see the complete signal again, hover your mouse over the bottom left corner of the axis (shown in blue in the image below) and when a small A appears, click on it. Multichannel When for example, one file has more than one signal, then each of the following can be done on each signal separately (except the slider and Moving & Zooming , which moves all signals together). Removing DC Component Follow the same steps as under single channel. Viewing the Power Spectral Density Follow the same steps as under single channel. Viewing the Time-Frequency Plot Follow the same steps as under single channel. Using the slider Follow the same steps as under single channel.","title":"Visualization"},{"location":"visualization/#visualizing-the-data","text":"The application can be used to work with a single channel signal or a multichannel signal.","title":"Visualizing the data"},{"location":"visualization/#single-channel","text":"When working with only one signal.","title":"Single channel"},{"location":"visualization/#removing-dc-component","text":"To remove the DC component from the signal, under the Channels tab, right-click on the signal name for which you want to remove DC, and click on Remove DC .","title":"Removing DC Component"},{"location":"visualization/#viewing-the-power-spectral-density","text":"Under the Channels tab, right-click on the signal name for which you want to see the power spectral density (PSD). Click on Plot PSD and the PSD of the signal will appear under the Secondary plotting tab.","title":"Viewing the Power Spectral Density"},{"location":"visualization/#viewing-the-time-frequency-plot","text":"Under the Channels tab, right-click on the signal name for which you want to see the time-frequency plot. Click on Plot Time-Frequency and the time-frequency plot will appear under the Secondary plotting tab.","title":"Viewing the Time-Frequency Plot"},{"location":"visualization/#moving-zooming","text":"To move the signal, click and drag the signal. To zoom in & out of the signal, scroll up & down on the signal.","title":"Moving &amp; Zooming"},{"location":"visualization/#using-the-slider","text":"The slider at the bottom of the Oscilloscope can be used to take a closer look at the signal. In order to see the complete signal again, hover your mouse over the bottom left corner of the axis (shown in blue in the image below) and when a small A appears, click on it.","title":"Using the slider"},{"location":"visualization/#multichannel","text":"When for example, one file has more than one signal, then each of the following can be done on each signal separately (except the slider and Moving & Zooming , which moves all signals together).","title":"Multichannel"},{"location":"visualization/#removing-dc-component_1","text":"Follow the same steps as under single channel.","title":"Removing DC Component"},{"location":"visualization/#viewing-the-power-spectral-density_1","text":"Follow the same steps as under single channel.","title":"Viewing the Power Spectral Density"},{"location":"visualization/#viewing-the-time-frequency-plot_1","text":"Follow the same steps as under single channel.","title":"Viewing the Time-Frequency Plot"},{"location":"visualization/#using-the-slider_1","text":"Follow the same steps as under single channel.","title":"Using the slider"}]}
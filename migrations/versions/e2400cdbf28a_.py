"""empty message

Revision ID: e2400cdbf28a
Revises: 5a7dd412b196
Create Date: 2019-07-20 20:59:58.795108

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e2400cdbf28a'
down_revision = '5a7dd412b196'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('device',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('company', sa.String(), nullable=True),
    sa.Column('sin', sa.Integer(), nullable=True),
    sa.Column('channel_num', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('signal',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('sensor', sa.String(), nullable=True),
    sa.Column('sensor_location_on_body', sa.String(), nullable=True),
    sa.Column('raw', sa.ARRAY(sa.Float()), nullable=True),
    sa.Column('filtered', sa.ARRAY(sa.Float()), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['device.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('channel_num', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('fs', sa.Integer(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('signal_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['signal_id'], ['signal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('epoch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('signal_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('modified_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['signal_id'], ['signal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('recording')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recording',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('participant_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('institution', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('exp_start_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('exp_end_time', postgresql.TIME(), autoincrement=False, nullable=True),
    sa.Column('time_description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('visit_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('modified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='recording_pkey')
    )
    op.drop_table('epoch')
    op.drop_table('data')
    op.drop_table('signal')
    op.drop_table('device')
    # ### end Alembic commands ###
